{"version":3,"sources":["MediaCard.tsx","Content.tsx","App.tsx","reportWebVitals.js","serviceWorkerRegistration.ts","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","MediaCard","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","theme","createStyles","grid","marginTop","reptile","margin","width","p","marginBottom","Content","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","xl","flexGrow","menuButton","marginRight","spacing","appBar","background","App","AppBar","position","Toolbar","IconButton","edge","aria-label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.24f19de8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://www.havanaharrys.net/wp-content/uploads/2020/06/reptile-life-circle.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import { createStyles, Grid, Theme, Typography } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\n\r\nimport MediaCard from \"./MediaCard\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grid: {\r\n            marginTop: 15,\r\n        },\r\n        reptile: {\r\n            margin: \"auto\",\r\n            width: 400\r\n        },\r\n        p: {\r\n            marginTop: 15,\r\n            marginBottom: 15,\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function Content () {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.grid}\r\n            >\r\n                <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n                        <Typography variant=\"h3\">Descriptio huc veniat</Typography>\r\n\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer efficitur ipsum urna, eget bibendum tellus scelerisque sit amet. Donec varius cursus placerat. Curabitur a interdum purus. Phasellus neque eros, dignissim sit amet sagittis vel, hendrerit id nulla. Mauris eget sem at ligula maximus interdum. Aenean commodo, sapien sit amet auctor accumsan, turpis quam eleifend odio, a maximus quam massa at justo. Maecenas sollicitudin non turpis et eleifend. Proin nisi lectus, aliquet nec auctor at, consectetur ornare velit. Proin et pellentesque dolor, et fringilla magna. Phasellus pretium ullamcorper nisl non sodales. Nulla porta justo a massa auctor, eu placerat tellus finibus. Vestibulum in tempor enim.\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            <div className={classes.reptile}>\r\n                                <MediaCard />\r\n                            </div>\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            Integer tincidunt dolor ut rhoncus pretium. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Cras blandit placerat augue sit amet sagittis. Praesent porta ipsum vitae consectetur maximus. Cras vel lectus purus. Sed ultrices, metus porta blandit blandit, ligula nisi imperdiet velit, vitae consequat nulla lectus eu velit. Phasellus eget sollicitudin nisl. Vivamus imperdiet odio id magna semper, eu sollicitudin diam euismod.\r\n                        </Typography>\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            Maecenas pharetra molestie velit, eu volutpat turpis porttitor id. Integer ut bibendum augue, vel finibus ex. Vestibulum auctor, erat quis tristique commodo, odio leo sollicitudin orci, ac iaculis orci nunc a tortor. Praesent bibendum vel libero nec convallis. Phasellus erat orci, condimentum at ornare ac, fringilla id nunc. Vestibulum ac nisl imperdiet, egestas dolor et, porta elit. Quisque iaculis sodales mi, non porttitor eros. Aliquam facilisis urna id accumsan dignissim. Etiam lacinia hendrerit justo, ut placerat risus dapibus maximus. In vitae velit sit amet ligula eleifend volutpat sit amet nec metus. Quisque sodales nibh a nunc lacinia, dignissim pretium diam tempor.\r\n                        </Typography>\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            Maecenas lacus tortor, rutrum at massa vel, malesuada fermentum orci. Nullam ac fringilla nunc. Integer lorem neque, ullamcorper ac orci eget, lobortis efficitur nunc. Nulla vel purus vestibulum, hendrerit magna non, aliquam dui. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Suspendisse iaculis varius ligula, sed facilisis metus varius vel. Nulla in commodo magna. Pellentesque pellentesque velit dui, vel semper velit porttitor ac. Vestibulum commodo sodales magna, nec viverra odio blandit et. Vestibulum tristique suscipit dapibus. Aenean vestibulum eu justo at dapibus.\r\n                        </Typography>\r\n                        <Typography variant=\"p\" component=\"p\" className={classes.p}>\r\n                            Suspendisse a lectus interdum, hendrerit risus pellentesque, rutrum sem. Suspendisse eget rhoncus ante. Nunc ut eleifend eros. Phasellus ultrices augue eget tempus gravida. Sed tincidunt congue turpis, et dapibus nisl auctor ut. Nunc tempus malesuada velit, ut gravida massa. Ut commodo ornare sapien at consequat. Nam commodo egestas quam sed dignissim. Praesent luctus scelerisque lacus, consectetur vestibulum ante tincidunt quis. Duis augue leo, tincidunt nec ex vitae, varius sagittis nibh.\r\n                        </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport logo from './logo.svg';\nimport './App.css';\n\nimport React from \"react\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport MainContent from \"./Content\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        appBar: {\n            background: \"#304860\"\n        }\n    }),\n);\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Forum optimum\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n\n            <MainContent />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}